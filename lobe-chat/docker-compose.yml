name: lobe-chat-database
services:
  network-service:
    image: alpine
    container_name: lobe-network
    restart: always
    ports:
      - '9000:9000' # MinIO API
      - '9001:9001' # MinIO Console
      - '3210:3210' # LobeChat
    command: tail -f /dev/null
    networks:
      - lobe-network

  postgresql:
    image: pgvector/pgvector:pg17
    container_name: lobe-postgres
    ports:
      - '5432:5432'
    volumes:
      - './data:/var/lib/postgresql/data'
    environment:
      - 'POSTGRES_DB=lobechat'
      - 'POSTGRES_PASSWORD=uWNZugjBqixf8dxC' # 注意：生产环境建议修改此密码
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - lobe-network

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: lobe-minio
    network_mode: 'service:network-service'
    volumes:
      - './s3_data:/etc/minio/data'
    environment:
      - 'MINIO_API_CORS_ALLOW_ORIGIN=*'
      - 'MINIO_ROOT_USER=admin'
      - 'MINIO_ROOT_PASSWORD=lobe-chat' # 警告：生产环境请务必修改此密码
      # 以下变量供 entrypoint 脚本使用
      - 'MINIO_PORT=9000'
      - 'MINIO_LOBE_BUCKET=lobe'
    restart: always
    entrypoint: >
      /bin/sh -c "
        minio server /etc/minio/data --address ':${MINIO_PORT}' --console-address ':9001' &
        MINIO_PID=$$!
        while ! curl -s http://localhost:${MINIO_PORT}/minio/health/live; do
          echo 'Waiting for MinIO to start...'
          sleep 1
        done
        sleep 5
        mc alias set myminio http://localhost:${MINIO_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}
        echo 'Creating bucket ${MINIO_LOBE_BUCKET}'
        mc mb myminio/${MINIO_LOBE_BUCKET}
        wait $$MINIO_PID
      "

  searxng:
    image: searxng/searxng
    container_name: lobe-searxng
    volumes:
      - './searxng-settings.yml:/etc/searxng/settings.yml'
    environment:
      - 'SEARXNG_SETTINGS_FILE=/etc/searxng/settings.yml'
    restart: always
    networks:
      - lobe-network

  lobe:
    image: lobehub/lobe-chat-database
    container_name: lobe-chat
    network_mode: 'service:network-service'
    depends_on:
      postgresql:
        condition: service_healthy
      network-service:
        condition: service_started
      minio:
        condition: service_started
    environment:
      # LobeChat 自身配置
      - 'APP_URL=http://localhost:3210'
      - 'LOBE_PORT=3210'
      # 数据库配置
      - 'DATABASE_URL=postgresql://postgres:uWNZugjBqixf8dxC@postgresql:5432/lobechat'
      # 鉴权通用配置
      - 'NEXT_AUTH_SECRET=NX2kaPE923dt6BL2U8e9oSre5RfoT7hg' # 警告：生产环境请务必修改此值
      - 'KEY_VAULTS_SECRET=Kix2wcUONd4CX51E/ZPAd36BqM4wzJgKjPtz2sGztqQ=' # 警告：生产环境请务必修改此值
      - 'AUTH_URL=http://localhost:3210/api/auth'
      # SSO - 通用 OIDC 配置 (请在 .env 文件或环境变量中提供这些值)
      - 'NEXT_AUTH_SSO_PROVIDERS=oidc'
      - 'OIDC_CLIENT_ID=${LAZYCAT_AUTH_OIDC_CLIENT_ID}'
      - 'OIDC_CLIENT_SECRET=${LAZYCAT_AUTH_OIDC_CLIENT_SECRET}'
      - 'OIDC_ISSUER=${LAZYCAT_AUTH_OIDC_ISSUER_URI}'
      - 'OIDC_AUTHORIZATION_URL=${LAZYCAT_AUTH_OIDC_AUTH_URI}'
      - 'OIDC_TOKEN_URL=${LAZYCAT_AUTH_OIDC_TOKEN_URI}'
      - 'OIDC_USERINFO_URL=${LAZYCAT_AUTH_OIDC_USERINFO_URI}'
      # 文件存储 - S3 (MinIO) 配置
      - 'S3_ENDPOINT=http://localhost:9000'
      - 'S3_PUBLIC_DOMAIN=http://localhost:9000'
      - 'S3_BUCKET=lobe'
      - 'S3_ACCESS_KEY=admin'
      - 'S3_ACCESS_KEY_ID=admin'
      - 'S3_SECRET_ACCESS_KEY=lobe-chat' # 警告：生产环境请务必修改此密码
      - 'S3_ENABLE_PATH_STYLE=1'
      - 'LLM_VISION_IMAGE_USE_BASE64=1'
      - 'S3_SET_ACL=0'
      # 其他
      - 'SEARXNG_URL=http://searxng:8080'
    restart: always
    entrypoint: >
      /bin/sh -c "
        /bin/node /app/startServer.js &
        LOBE_PID=$$!
        sleep 3
        # 移除了 Casdoor 的健康检查，添加 MinIO 健康检查
        if [ $$(wget --timeout=5 --spider --server-response $${S3_ENDPOINT}/minio/health/live 2>&1 | grep -c 'HTTP/1.1 200 OK') -eq 0 ]; then
          echo '⚠️Warning: Unable to fetch MinIO health status'
          echo 'Request URL: $${S3_ENDPOINT}/minio/health/live'
          echo 'Read more at: https://lobehub.com/docs/self-hosting/server-database/docker-compose#necessary-configuration'
          echo ''
          echo '⚠️注意：无法获取 MinIO 健康状态'
          echo '请求 URL: $${S3_ENDPOINT}/minio/health/live'
          echo '了解更多：https://lobehub.com/zh/docs/self-hosting/server-database/docker-compose#necessary-configuration'
          echo ''
        fi
        wait $$LOBE_PID
      "

volumes:
  data:
    driver: local
  s3_data:
    driver: local

networks:
  lobe-network:
    driver: bridge